---
title: CDC Addiction dataset EDA
subtitle: DSAN 5200-03 Final Project
author: Jen Guo
date: last-modified
date-format: long
format:
  html:
    toc: true
    code-copy: true
    code-overflow: wrap
    mainfont: Atkinson Hyperlegible
    code-annotations: hover
    code-fold: true
execute:
  echo: true
  warning: false
  message: false
  freeze: auto 
---

# Set up in R

```{r}
#load libraries fof r
library(ggplot2) 
library(readr) 
library(dplyr)
library(reticulate)
library(tidyverse)
library(tidyr)
library(stringr)
library(tibble)
library(reshape2)
```

# Load data and EDA

```{r}
#read loan csv file
addiction_data <- read.csv("data/cleaned_addiction.csv")
addiction_tibble <- tibble(addiction_data) #use tibble to make addiction_data a dataframe

```

```{r}
#check for data types of each column in the dataframe
str(addiction_tibble)

```

```{r}
#check for missing values 
print(sum(is.na(addiction_tibble)))

```

There are 78231 missing values in this cleaned addcition dataset

```{r}
#create heatmap of missing values 
#subset addiction dataset to only include numerical columns
addiction_num_df <- addiction_tibble %>%
    select(Count_drug_overdose_deaths, Percentage_of_records_pending)

#subset addiction dataset so memory space won't run out
addiction_subset_df <- addiction_num_df[1:1000,] #select rows 1 to 1000

#convert numerica columns addiction dataframe into matrix to prepare for heatmap 
addiction_matrix <- as.matrix(addiction_subset_df)

```

```{r}
#create heatmap of the addiction matrix
heatmap(addiction_matrix)

#initially got the following error when I used the full dataset with numeric fields: Error: vector memory limit of 16.0 Gb reached, see mem.maxVSize()
```

The heatmap plots a subset of the numeric fields of the addiction dataset, which are Count_drug_overdose_deaths and Percentage_of_records_pending. The heatmap plot shows the subset of the addiction dataframe contains majority higher values in the Count_drug_overdose_deaths and Percentage_of_records_pending columns.

```{r}
#view summary table of stats for each column in the addiction dataset
summary(addiction_tibble)
```

```{r}
#create boxplots of the Count_drug_overdose_deaths
boxplot(addiction_tibble$Count_drug_overdose_deaths)

```

Boxplot above shows the distribution of the Count_drug_overdose_deaths column. The boxplot shows majority of the data values are outliers.

```{r}
#create boxplot for the Percentage_of_records_pending column
boxplot(addiction_tibble$Percentage_of_records_pending)
```

Boxplot above shows the distribution of the Percentage_of_records_pending. The boxplot shows majority of the data values are outliers.

```{r}
#create histograms for univariante analysis
hist(addiction_tibble$Count_drug_overdose_deaths, xlab="Number of Drug Overdose Deaths", col = "blue", border = "black")

```

Histogram above shows the distribution of the "Count_drug_overdose_deaths" column. The histogram has a left skew and shows that the addiction dataset has more frequent values in the lower range in the number of drug overdose deaths for each county in the US.

```{r}
#create histograms for univariante analysis
hist(addiction_tibble$Percentage_of_records_pending, xlab="Percentage of Records Pending", col = "blue", border = "black")

```

Histogram above shows the distribution of the "Percentage_of_records_pending" column. The histogram has a left skew and shows that the addiction dataset has more frequent values in the lower range in the number of pending records for deaths due to drug overdose for each county in the US.

# Visualizations

## Bar Plot Visual Drug Overdose Deaths in Counties

```{r}
#Get top  20  highest number of drug overdose deaths 
top_overdoses <- addiction_tibble

top_overdoses <- top_overdoses %>%
    top_n(20, Count_drug_overdose_deaths)
```

```{r}
#set to custom color palette 
my_palette <- c("deeppink", "springgreen", "darkviolet", "coral", "dodgerblue")
```

```{r}
#create bar plot
addiction_barplot <- ggplot(top_overdoses, aes(y = Count_drug_overdose_deaths, x = COUNTYNAME)) + 
    geom_bar(stat="identity") + #create bar plot
    labs(y = "Number of Drug Overdose Deaths", x = "State Counties", title = "Figure 1: US Counties with Top 20 Highest Number of Drug Overdose Deaths", caption="Figure 1 shows the different number of drug overdose deaths for each county in the US") +  #set x,y, color variable titles, plot title, and caption
    scale_color_manual(values = my_palette) + #set color palette to my custom palette
    guides(color = guide_legend(title = "Type of Loan")) +  #update legend title
    theme_light() + #set to light theme 
    theme( plot.background = element_rect(fill = "aliceblue"), #update panel background color
      axis.title = element_text(face = "bold"), #update axis title text type 
      axis.line = element_line(arrow = arrow()), #update the axis line format to arrows 
      axis.text = element_text(colour = "mediumblue"), #update axis text color 
      axis.ticks = element_line(linewidth = 2), #update axis tick marks thickness 
      plot.subtitle = element_text(colour = "mediumblue"), #update plot subtitle color 
      panel.background = element_rect(fill = "ghostwhite"), #update plot panel color 
      panel.grid.minor = element_blank(), #update plot minor grid 
      panel.grid.major = element_line(color = "darkblue"), #update plot major grid color 
      legend.title = element_text(face = "bold"), #update legend title text type 
      legend.key = element_rect(color = "deepskyblue"), #update the legend key colors 
      legend.frame = element_rect(color = "deepskyblue"), #update the edge of legend patch color 
      legend.background = element_rect(color = "oldlace")
      ) +  #update legend patch background color 
     theme(plot.title = element_text(family="Times New Roman", size=18, face="bold"), #update plot title font, size, and text type 
           plot.caption = element_text(family="Times New Roman", colour = "azure", size=12), #update caption font, color, and size 
           axis.title.x = element_text(family="Times New Roman", colour = "mediumblue"), #update x axis text font and color 
           axis.title.y = element_text(family="Times New Roman", colour = "mediumblue")) #update y axis text font and color

addiction_barplot #display bar plot
```

Figure 1 above is a bar graph that the US counties with top 20 highest count of drug overdose deaths, which are the Clark, Harris, King, Philadelphia, San Diego, and Wayne counties. The San Diego county contained the highest count of drug overdose deaths.

## Bar Graph Visual Drug Overdose Death Dates

```{r}
#convert Analysis_date variable to date data type 
library(lubridate)
library(zoo)

#set new dataframe name for addiction dataframe with date transformation
addiction_datedf <- addiction_tibble 

#create new column combine the year and month of death
#did not create desired column format
addiction_datedf$Death_date <- as.yearmon(paste(addiction_datedf$Year_of_death, addiction_datedf$Month_of_death), "%Y %m")

str(addiction_datedf$Death_date)

```

```{r}
#attempt 2 to create Death date column
addiction_deathdate_df <- addiction_tibble 

addiction_deathdate_df$Death_date <- sprintf("%d-%02d", addiction_deathdate_df$Year_of_death, addiction_deathdate_df$Month_of_death)

#check new Death_date column data type
str(addiction_deathdate_df$Death_date) #character
```

```{r}
#create bar graph
addiction_deathbarplot <- ggplot(addiction_deathdate_df, aes(x = Death_date, y = Count_drug_overdose_deaths)) + 
    geom_bar(stat="identity") + #create bar plot
    labs(y = "Number of Drug Overdose Deaths", x = "Death Date Due to Drug Overdose", title = "Figure 2: Analysis of Drug Overdose Deaths in the US from 2020 to 2024", caption="Figure 2 shows the date of deaths due to drug overdose") +  #set x,y, color variable titles, plot title, and caption
    scale_color_manual(values = my_palette) + #set color palette to my custom palette
    guides(color = guide_legend(title = "Type of Loan")) +  #update legend title
    theme_light() + #set to light theme 
    theme( plot.background = element_rect(fill = "aliceblue"), #update panel background color
      axis.title = element_text(face = "bold"), #update axis title text type 
      axis.line = element_line(arrow = arrow()), #update the axis line format to arrows 
      axis.text = element_text(colour = "mediumblue"), #update axis text color 
      axis.ticks = element_line(linewidth = 2), #update axis tick marks thickness 
      plot.subtitle = element_text(colour = "mediumblue"), #update plot subtitle color 
      panel.background = element_rect(fill = "ghostwhite"), #update plot panel color 
      panel.grid.minor = element_blank(), #update plot minor grid 
      panel.grid.major = element_line(color = "darkblue"), #update plot major grid color 
      legend.title = element_text(face = "bold"), #update legend title text type 
      legend.key = element_rect(color = "deepskyblue"), #update the legend key colors 
      legend.frame = element_rect(color = "deepskyblue"), #update the edge of legend patch color 
      legend.background = element_rect(color = "oldlace"),
      axis.text.x = element_text(angle = 90, hjust = 1) #rotate x axis label
      ) +  #update legend patch background color 
     theme(plot.title = element_text(family="Times New Roman", size=18, face="bold"), #update plot title font, size, and text type 
           plot.caption = element_text(family="Times New Roman", colour = "azure", size=12), #update caption font, color, and size 
           axis.title.x = element_text(family="Times New Roman", colour = "mediumblue"), #update x axis text font and color 
           axis.title.y = element_text(family="Times New Roman", colour = "mediumblue")) #update y axis text font and color

addiction_deathbarplot #display bar plot 
```

Figure 2 above is a bar graph that shows date of deaths due to drug overdose that occurred in the US between 2020/01 and 2024/06. The bar graph shows a steady increase in drug overdose deaths in the US between 2020/01 and 2023/09. Then from 2023/10 to 2024/06, there was a steady decrease in drug overdose deaths in the US.

## Map Visual

```{r}
#install libraries to create map visual 
library(sf)
library(geojsonsf) # reading GeoJSON files into the right format
library(plotly)
library(rjson)

#read the us map geojson file
#usa <- geojson_sf("data/USA.geo.json")

```

```{r}
#create choropleth map

#source code site: https://plotly.com/r/choropleth-maps/
url <- 'https://raw.githubusercontent.com/plotly/datasets/master/geojson-counties-fips.json'
counties <- rjson::fromJSON(file=url)
url2<- "https://raw.githubusercontent.com/plotly/datasets/master/fips-unemp-16.csv"

g <- list( 
    scope = 'usa',
    projection = list(type = 'albers usa'),
    showlakes = TRUE,
    lakecolor = toRGB('white')
)

fig <- plot_ly()
fig <- fig %>%
    add_trace(
        type="choropleth",
        geojson=counties,
        locations=addiction_deathdate_df$FIPS,
        z=addiction_deathdate_df$Count_drug_overdose_deaths,
        colorscale="Viridis",
        colorbar = list(title = "Drug Overdose Deaths"),
        marker = list(line = list(width = 0))
        )

fig <- fig %>% layout(
    title = "Drug Overdose Deaths in the US from 2020 to 2024",
    geo = g)
  
fig

```